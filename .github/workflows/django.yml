name: Django CI

on:
  push:
    branches:
      - '**'
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:

  test:
    strategy:
      matrix:
        include:
          - python: '3.9'
            wagtail: '2.15.5'
          - python: '3.10'
            wagtail: '4.0'

    runs-on: 'ubuntu-latest'

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: askell
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    if: |
        (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
        (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')
    steps:
      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 6.8.13
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "psycopg2>=2.6"
          pip install -e .[testing]
          pip install "${{ matrix.django }}"
          pip install "elasticsearch>=6,<7"
          pip install certifi
          pip install ${{ matrix.wagtail }}
      - name: Test
        run: |
          ./runtests.py wagtail.search wagtail.documents wagtail.images --elasticsearch6
        env:
          DATABASE_ENGINE: django.db.backends.postgresql
          DATABASE_HOST: localhost
          DATABASE_USER: postgres
          DATABASE_PASSWORD: postgres
          USE_EMAIL_USER_MODEL: ${{ matrix.emailuser }}
      - name: Run migrations
        run: python manage.py migrate
